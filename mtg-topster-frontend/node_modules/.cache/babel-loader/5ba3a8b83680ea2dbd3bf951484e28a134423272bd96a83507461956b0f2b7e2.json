{"ast":null,"code":"var _jsxFileName = \"/Users/Jakeb/repos/mtg-topster/mtg-topster-frontend/src/CardFetcher.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar';\nimport './CardFetcher.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardFetcher() {\n  // ... unchanged code ...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: gridItems.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item\",\n        onDrop: e => handleDrop(e, index),\n        onDragOver: handleDragOver,\n        children: card && card.image_uris && card.image_uris.art_crop && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"cropped-image\",\n          src: card.image_uris.art_crop,\n          alt: card.name,\n          draggable: \"true\",\n          onDragStart: handleDragStart,\n          id: card.id.toString(),\n          \"data-source\": \"gridItem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: [\" \", searchResults.map(card => card.image_uris && card.image_uris.art_crop ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"art-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"cropped-image\",\n          src: card.image_uris.art_crop,\n          alt: card.name,\n          draggable: \"true\",\n          onDragStart: handleDragStart,\n          id: card.id.toString(),\n          \"data-source\": \"searchResult\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"art-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"No image available for \", card.name, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_c = CardFetcher;\nexport default CardFetcher;\nvar _c;\n$RefreshReg$(_c, \"CardFetcher\");","map":{"version":3,"names":["React","useState","axios","SearchBar","jsxDEV","_jsxDEV","CardFetcher","children","onSearch","handleSearch","fileName","_jsxFileName","lineNumber","columnNumber","className","gridItems","map","card","index","onDrop","e","handleDrop","onDragOver","handleDragOver","image_uris","art_crop","src","alt","name","draggable","onDragStart","handleDragStart","id","toString","searchResults","_c","$RefreshReg$"],"sources":["/Users/Jakeb/repos/mtg-topster/mtg-topster-frontend/src/CardFetcher.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar';\nimport './CardFetcher.css';\n\nfunction CardFetcher() {\n    // ... unchanged code ...\n\n    return (\n        <div>\n            <SearchBar onSearch={handleSearch} />\n            <div className=\"grid-container\">\n                {gridItems.map((card, index) => (\n                    <div key={index} className=\"grid-item\" onDrop={(e) => handleDrop(e, index)} onDragOver={handleDragOver}>\n                        {card && card.image_uris && card.image_uris.art_crop && (\n                            <img \n                                className=\"cropped-image\" \n                                src={card.image_uris.art_crop} \n                                alt={card.name}\n                                draggable=\"true\" \n                                onDragStart={handleDragStart} \n                                id={card.id.toString()}\n                                data-source=\"gridItem\"\n                            />\n                        )}\n                    </div>\n                ))}\n            </div>\n            <div className=\"results-container\"> {/* Wrapped search results */}\n                {searchResults.map(card => (\n                    card.image_uris && card.image_uris.art_crop ? (\n                        <div className=\"art-container\" key={card.id}>\n                            <img \n                                className=\"cropped-image\"\n                                src={card.image_uris.art_crop}\n                                alt={card.name}\n                                draggable=\"true\"\n                                onDragStart={handleDragStart}\n                                id={card.id.toString()}\n                                data-source=\"searchResult\"\n                            />\n                        </div>\n                    ) : (\n                        <div className=\"art-container\" key={card.id}>\n                            <p>No image available for {card.name}.</p>\n                        </div>\n                    )\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default CardFetcher;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/Jakeb/repos/mtg-topster/mtg-topster-frontend/src/CardFetcher.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar';\nimport './CardFetcher.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardFetcher() {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const handleSearch = async query => {\n    try {\n      const response = await axios.get(`http://localhost:5000/search/${query}`);\n      setSearchResults(response.data); // assuming the backend returns an array of cards\n    } catch (error) {\n      console.error(\"Error searching for cards:\", error);\n    }\n  };\n  function handleDragStart(event) {\n    event.dataTransfer.setData(\"cardId\", event.target.id);\n  }\n  function handleDragOver(event) {\n    event.preventDefault();\n  }\n  function handleDrop(event) {\n    event.preventDefault();\n    const cardId = event.dataTransfer.getData(\"cardId\");\n    const draggedImage = document.getElementById(cardId);\n    if (draggedImage) {\n      // Clear the target grid cell if it has any child\n      while (event.target.firstChild) {\n        event.target.removeChild(event.target.firstChild);\n      }\n\n      // Append the dragged image to the target grid cell\n      event.target.appendChild(draggedImage);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: Array(9).fill(null).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item\",\n        onDrop: handleDrop,\n        onDragOver: handleDragOver\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), searchResults.map(card => card.image_uris && card.image_uris.art_crop ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"art-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"cropped-image\",\n        src: card.image_uris.art_crop,\n        alt: card.name,\n        draggable: \"true\",\n        onDragStart: handleDragStart,\n        id: card.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this)\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"art-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No image available for \", card.name, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this)\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(CardFetcher, \"yyVBuiEzaYu8nxmfiuyN+Jj3pbw=\");\n_c = CardFetcher;\nexport default CardFetcher;\nvar _c;\n$RefreshReg$(_c, \"CardFetcher\");","map":{"version":3,"names":["React","useState","axios","SearchBar","jsxDEV","_jsxDEV","CardFetcher","_s","searchResults","setSearchResults","handleSearch","query","response","get","data","error","console","handleDragStart","event","dataTransfer","setData","target","id","handleDragOver","preventDefault","handleDrop","cardId","getData","draggedImage","document","getElementById","firstChild","removeChild","appendChild","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","className","Array","fill","map","_","index","onDrop","onDragOver","card","image_uris","art_crop","src","alt","name","draggable","onDragStart","_c","$RefreshReg$"],"sources":["/Users/Jakeb/repos/mtg-topster/mtg-topster-frontend/src/CardFetcher.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar';\nimport './CardFetcher.css';\n\nfunction CardFetcher() {\n    const [searchResults, setSearchResults] = useState([]);\n    \n    const handleSearch = async (query) => {\n        try {\n            const response = await axios.get(`http://localhost:5000/search/${query}`);\n            setSearchResults(response.data);  // assuming the backend returns an array of cards\n        } catch (error) {\n            console.error(\"Error searching for cards:\", error);\n        }\n    };\n\n    function handleDragStart(event) {\n        event.dataTransfer.setData(\"cardId\", event.target.id);\n    }\n\n    function handleDragOver(event) {\n        event.preventDefault();\n    }\n      \n    function handleDrop(event) {\n        event.preventDefault();\n        const cardId = event.dataTransfer.getData(\"cardId\");\n        const draggedImage = document.getElementById(cardId);\n    \n        if (draggedImage) {\n            // Clear the target grid cell if it has any child\n            while (event.target.firstChild) {\n                event.target.removeChild(event.target.firstChild);\n            }\n    \n            // Append the dragged image to the target grid cell\n            event.target.appendChild(draggedImage);\n        }\n    }\n    \n    return (\n        <div>\n            <SearchBar onSearch={handleSearch} />\n            <div className=\"grid-container\">\n                {Array(9).fill(null).map((_, index) => (\n                    <div key={index} className=\"grid-item\" onDrop={handleDrop} onDragOver={handleDragOver}></div>\n                ))}\n            </div>\n            {searchResults.map(card => (\n                card.image_uris && card.image_uris.art_crop ? (\n                    <div className=\"art-container\" key={card.id}>\n                        <img className=\"cropped-image\" src={card.image_uris.art_crop} alt={card.name} draggable=\"true\" onDragStart={handleDragStart} id={card.id} />\n                    </div>\n                ) : (\n                    <div className=\"art-container\" key={card.id}>\n                        <p>No image available for {card.name}.</p>\n                    </div>\n                )\n            ))}\n        </div>\n    );\n    \n}\n\nexport default CardFetcher;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
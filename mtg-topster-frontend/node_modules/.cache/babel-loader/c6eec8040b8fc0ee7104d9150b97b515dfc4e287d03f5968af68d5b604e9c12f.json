{"ast":null,"code":"var _jsxFileName = \"/Users/Jakeb/repos/mtg-topster/mtg-topster-frontend/src/CardFetcher.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar';\nimport './CardFetcher.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardFetcher() {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [gridItems, setGridItems] = useState(Array(9).fill(null));\n  const handleSearch = async query => {\n    try {\n      const response = await axios.get(`http://localhost:5000/search/${query}`);\n      setSearchResults(response.data);\n    } catch (error) {\n      console.error(\"Error searching for cards:\", error);\n    }\n  };\n  function handleDragStart(event) {\n    event.dataTransfer.setData(\"cardId\", event.target.id);\n    event.dataTransfer.setData(\"source\", event.target.getAttribute(\"data-source\"));\n  }\n  function handleDragOver(event) {\n    event.preventDefault();\n  }\n  function handleDrop(event, index) {\n    event.preventDefault();\n    const cardId = event.dataTransfer.getData(\"cardId\");\n    const source = event.dataTransfer.getData(\"source\");\n    const updatedGridItems = [...gridItems];\n    let draggedCard = null;\n    if (source === \"searchResult\") {\n      draggedCard = searchResults.find(card => card.id.toString() === cardId);\n      setSearchResults(prev => prev.filter(card => card.id.toString() !== cardId));\n    } else if (source === \"gridItem\") {\n      const sourceIndex = gridItems.findIndex(item => item && item.id.toString() === cardId);\n      draggedCard = updatedGridItems[sourceIndex];\n      updatedGridItems[sourceIndex] = updatedGridItems[index];\n    }\n    updatedGridItems[index] = draggedCard;\n    setGridItems(updatedGridItems);\n  }\n  function saveCollage(gridItems) {\n    // Convert the state to a string and save it in local storage\n    localStorage.setItem('savedCollage', JSON.stringify(gridItems));\n  }\n  function loadCollage() {\n    // Fetch the saved state from local storage and convert it back to an object\n    const savedCollage = JSON.parse(localStorage.getItem('savedCollage'));\n    return savedCollage || []; // Return an empty array if no collage is saved\n  }\n\n  function handleSave() {\n    saveCollage(gridItems);\n    alert(\"Collage saved!\");\n  }\n  function handleLoad() {\n    const loadedCollage = loadCollage();\n    setGridItems(loadedCollage);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLoad,\n      children: \"Load Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: gridItems.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item\",\n        onDrop: e => handleDrop(e, index),\n        onDragOver: handleDragOver,\n        children: card && card.image_uris && card.image_uris.art_crop && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"cropped-image\",\n          src: card.image_uris.art_crop,\n          alt: card.name,\n          draggable: \"true\",\n          onDragStart: handleDragStart,\n          id: card.id.toString(),\n          \"data-source\": \"gridItem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: [\" \", searchResults.map(card => card.image_uris && card.image_uris.art_crop ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"art-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"cropped-image\",\n          src: card.image_uris.art_crop,\n          alt: card.name,\n          draggable: \"true\",\n          onDragStart: handleDragStart,\n          id: card.id.toString(),\n          \"data-source\": \"searchResult\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"art-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"No image available for \", card.name, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(CardFetcher, \"9d5IpUolvlaYfrmGRsIHbCyp3F0=\");\n_c = CardFetcher;\nexport default CardFetcher;\nvar _c;\n$RefreshReg$(_c, \"CardFetcher\");","map":{"version":3,"names":["React","useState","axios","SearchBar","jsxDEV","_jsxDEV","CardFetcher","_s","searchResults","setSearchResults","gridItems","setGridItems","Array","fill","handleSearch","query","response","get","data","error","console","handleDragStart","event","dataTransfer","setData","target","id","getAttribute","handleDragOver","preventDefault","handleDrop","index","cardId","getData","source","updatedGridItems","draggedCard","find","card","toString","prev","filter","sourceIndex","findIndex","item","saveCollage","localStorage","setItem","JSON","stringify","loadCollage","savedCollage","parse","getItem","handleSave","alert","handleLoad","loadedCollage","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","map","onDrop","e","onDragOver","image_uris","art_crop","src","alt","name","draggable","onDragStart","_c","$RefreshReg$"],"sources":["/Users/Jakeb/repos/mtg-topster/mtg-topster-frontend/src/CardFetcher.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar';\nimport './CardFetcher.css';\n\nfunction CardFetcher() {\n    const [searchResults, setSearchResults] = useState([]);\n    const [gridItems, setGridItems] = useState(Array(9).fill(null));\n\n    const handleSearch = async (query) => {\n        try {\n            const response = await axios.get(`http://localhost:5000/search/${query}`);\n            setSearchResults(response.data);\n        } catch (error) {\n            console.error(\"Error searching for cards:\", error);\n        }\n    };\n\n    function handleDragStart(event) {\n        event.dataTransfer.setData(\"cardId\", event.target.id);\n        event.dataTransfer.setData(\"source\", event.target.getAttribute(\"data-source\"));\n    }\n\n    function handleDragOver(event) {\n        event.preventDefault();\n    }\n\n    function handleDrop(event, index) {\n        event.preventDefault();\n    \n        const cardId = event.dataTransfer.getData(\"cardId\");\n        const source = event.dataTransfer.getData(\"source\");\n    \n        const updatedGridItems = [...gridItems];\n    \n        let draggedCard = null;\n        if (source === \"searchResult\") {\n            draggedCard = searchResults.find(card => card.id.toString() === cardId);\n            setSearchResults(prev => prev.filter(card => card.id.toString() !== cardId));\n        } else if (source === \"gridItem\") {\n            const sourceIndex = gridItems.findIndex(item => item && item.id.toString() === cardId);\n            draggedCard = updatedGridItems[sourceIndex];\n            updatedGridItems[sourceIndex] = updatedGridItems[index];\n        }\n    \n        updatedGridItems[index] = draggedCard;\n        setGridItems(updatedGridItems);\n    }\n\n    function saveCollage(gridItems) {\n        // Convert the state to a string and save it in local storage\n        localStorage.setItem('savedCollage', JSON.stringify(gridItems));\n    }\n    \n    function loadCollage() {\n        // Fetch the saved state from local storage and convert it back to an object\n        const savedCollage = JSON.parse(localStorage.getItem('savedCollage'));\n        return savedCollage || []; // Return an empty array if no collage is saved\n    }\n    \n    function handleSave() {\n        saveCollage(gridItems);\n        alert(\"Collage saved!\");\n    }\n\n    function handleLoad() {\n        const loadedCollage = loadCollage();\n        setGridItems(loadedCollage);\n    }\n\n    return (\n        <div>\n            <SearchBar onSearch={handleSearch} />\n            <button onClick={handleSave}>Save Chart</button>\n            <button onClick={handleLoad}>Load Chart</button>\n            <div className=\"grid-container\">\n                {gridItems.map((card, index) => (\n                    <div key={index} className=\"grid-item\" onDrop={(e) => handleDrop(e, index)} onDragOver={handleDragOver}>\n                        {card && card.image_uris && card.image_uris.art_crop && (\n                            <img \n                                className=\"cropped-image\" \n                                src={card.image_uris.art_crop} \n                                alt={card.name}\n                                draggable=\"true\" \n                                onDragStart={handleDragStart} \n                                id={card.id.toString()}\n                                data-source=\"gridItem\"\n                            />\n                        )}\n                    </div>\n                ))}\n            </div>\n            <div className=\"results-container\"> {/* Wrapped search results */}\n                {searchResults.map(card => (\n                    card.image_uris && card.image_uris.art_crop ? (\n                        <div className=\"art-container\" key={card.id}>\n                            <img \n                                className=\"cropped-image\"\n                                src={card.image_uris.art_crop}\n                                alt={card.name}\n                                draggable=\"true\"\n                                onDragStart={handleDragStart}\n                                id={card.id.toString()}\n                                data-source=\"searchResult\"\n                            />\n                        </div>\n                    ) : (\n                        <div className=\"art-container\" key={card.id}>\n                            <p>No image available for {card.name}.</p>\n                        </div>\n                    )\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default CardFetcher;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/Jakeb/repos/mtg-topster/mtg-topster-frontend/src/CardFetcher.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar';\nimport './CardFetcher.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardFetcher() {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const draggedItem = useRef(null); // Reference for the dragged item\n\n  const handleSearch = async query => {\n    try {\n      const response = await axios.get(`http://localhost:5000/search/${query}`);\n      setSearchResults(response.data);\n    } catch (error) {\n      console.error(\"Error searching for cards:\", error);\n    }\n  };\n  function handleDragStart(event, card) {\n    draggedItem.current = card; // Store the card data directly\n    event.dataTransfer.setData(\"cardId\", event.target.id);\n  }\n  function handleDragOver(event) {\n    event.preventDefault();\n  }\n  function handleDrop(event) {\n    event.preventDefault();\n    if (draggedItem.current) {\n      const cardData = draggedItem.current;\n      const cardId = cardData.id;\n      const existingImage = document.getElementById(cardId);\n      if (existingImage) {\n        // Clear the target grid cell if it has any child\n        while (event.target.firstChild) {\n          event.target.removeChild(event.target.firstChild);\n        }\n\n        // Append the dragged image to the target grid cell\n        event.target.appendChild(existingImage);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: Array(9).fill(null).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item\",\n        onDrop: handleDrop,\n        onDragOver: handleDragOver\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), searchResults.map(card => card.image_uris && card.image_uris.art_crop ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"art-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"cropped-image\",\n        src: card.image_uris.art_crop,\n        alt: card.name,\n        draggable: \"true\",\n        onDragStart: e => handleDragStart(e, card),\n        id: card.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this)\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"art-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No image available for \", card.name, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this)\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(CardFetcher, \"d06lvbNVF6jhzK5dHG41uWq+8Fw=\");\n_c = CardFetcher;\nexport default CardFetcher;\nvar _c;\n$RefreshReg$(_c, \"CardFetcher\");","map":{"version":3,"names":["React","useState","useRef","axios","SearchBar","jsxDEV","_jsxDEV","CardFetcher","_s","searchResults","setSearchResults","draggedItem","handleSearch","query","response","get","data","error","console","handleDragStart","event","card","current","dataTransfer","setData","target","id","handleDragOver","preventDefault","handleDrop","cardData","cardId","existingImage","document","getElementById","firstChild","removeChild","appendChild","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","className","Array","fill","map","_","index","onDrop","onDragOver","image_uris","art_crop","src","alt","name","draggable","onDragStart","e","_c","$RefreshReg$"],"sources":["/Users/Jakeb/repos/mtg-topster/mtg-topster-frontend/src/CardFetcher.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar';\nimport './CardFetcher.css';\n\nfunction CardFetcher() {\n    const [searchResults, setSearchResults] = useState([]);\n    const draggedItem = useRef(null); // Reference for the dragged item\n    \n    const handleSearch = async (query) => {\n        try {\n            const response = await axios.get(`http://localhost:5000/search/${query}`);\n            setSearchResults(response.data);\n        } catch (error) {\n            console.error(\"Error searching for cards:\", error);\n        }\n    };\n\n    function handleDragStart(event, card) {\n        draggedItem.current = card; // Store the card data directly\n        event.dataTransfer.setData(\"cardId\", event.target.id);\n    }\n\n    function handleDragOver(event) {\n        event.preventDefault();\n    }\n      \n    function handleDrop(event) {\n        event.preventDefault();\n        \n        if (draggedItem.current) {\n            const cardData = draggedItem.current;\n            const cardId = cardData.id;\n            const existingImage = document.getElementById(cardId);\n\n            if (existingImage) {\n                // Clear the target grid cell if it has any child\n                while (event.target.firstChild) {\n                    event.target.removeChild(event.target.firstChild);\n                }\n                \n                // Append the dragged image to the target grid cell\n                event.target.appendChild(existingImage);\n            }\n        }\n    }\n    \n    return (\n        <div>\n            <SearchBar onSearch={handleSearch} />\n            <div className=\"grid-container\">\n                {Array(9).fill(null).map((_, index) => (\n                    <div key={index} className=\"grid-item\" onDrop={handleDrop} onDragOver={handleDragOver}></div>\n                ))}\n            </div>\n            {searchResults.map(card => (\n                card.image_uris && card.image_uris.art_crop ? (\n                    <div className=\"art-container\" key={card.id}>\n                        <img \n                            className=\"cropped-image\" \n                            src={card.image_uris.art_crop} \n                            alt={card.name} \n                            draggable=\"true\" \n                            onDragStart={(e) => handleDragStart(e, card)} \n                            id={card.id} \n                        />\n                    </div>\n                ) : (\n                    <div className=\"art-container\" key={card.id}>\n                        <p>No image available for {card.name}.</p>\n                    </div>\n                )\n            ))}\n        </div>\n    );\n}\n\nexport default CardFetcher;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
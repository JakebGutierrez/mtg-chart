{"ast":null,"code":"var _jsxFileName = \"/Users/Jakeb/repos/mtg-topster/mtg-topster-frontend/src/CardFetcher.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar';\nimport './CardFetcher.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardFetcher() {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [gridItems, setGridItems] = useState(Array(9).fill(null));\n  const handleSearch = async query => {\n    try {\n      const response = await axios.get(`http://localhost:5000/search/${query}`);\n      setSearchResults(response.data); // Assuming the backend returns an array of cards\n    } catch (error) {\n      console.error(\"Error searching for cards:\", error);\n    }\n  };\n  function handleDragStart(event) {\n    event.dataTransfer.setData(\"cardId\", event.target.id);\n  }\n  function handleDragOver(event) {\n    event.preventDefault();\n  }\n  function handleDrop(event, index) {\n    event.preventDefault();\n    const cardId = event.dataTransfer.getData(\"cardId\");\n    const draggedImage = document.getElementById(cardId);\n    if (draggedImage) {\n      while (event.target.firstChild) {\n        event.target.removeChild(event.target.firstChild);\n      }\n      event.target.appendChild(draggedImage);\n      const newGridItems = [...gridItems];\n      newGridItems[index] = cardId; // Store the ID of the card in the grid cell's index\n      setGridItems(newGridItems);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: gridItems.map((cardId, index) => {\n        var _searchResults$find, _searchResults$find$i, _searchResults$find2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-item\",\n          onDrop: e => handleDrop(e, index),\n          onDragOver: handleDragOver,\n          children: cardId && /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"cropped-image\",\n            src: (_searchResults$find = searchResults.find(card => card.id.toString() === cardId)) === null || _searchResults$find === void 0 ? void 0 : (_searchResults$find$i = _searchResults$find.image_uris) === null || _searchResults$find$i === void 0 ? void 0 : _searchResults$find$i.art_crop,\n            alt: (_searchResults$find2 = searchResults.find(card => card.id.toString() === cardId)) === null || _searchResults$find2 === void 0 ? void 0 : _searchResults$find2.name,\n            draggable: \"true\",\n            onDragStart: handleDragStart,\n            id: cardId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), searchResults.map(card => card.image_uris && card.image_uris.art_crop ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"art-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"cropped-image\",\n        src: card.image_uris.art_crop,\n        alt: card.name,\n        draggable: \"true\",\n        onDragStart: handleDragStart,\n        id: card.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this)\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"art-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No image available for \", card.name, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this)\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(CardFetcher, \"9d5IpUolvlaYfrmGRsIHbCyp3F0=\");\n_c = CardFetcher;\nexport default CardFetcher;\nvar _c;\n$RefreshReg$(_c, \"CardFetcher\");","map":{"version":3,"names":["React","useState","axios","SearchBar","jsxDEV","_jsxDEV","CardFetcher","_s","searchResults","setSearchResults","gridItems","setGridItems","Array","fill","handleSearch","query","response","get","data","error","console","handleDragStart","event","dataTransfer","setData","target","id","handleDragOver","preventDefault","handleDrop","index","cardId","getData","draggedImage","document","getElementById","firstChild","removeChild","appendChild","newGridItems","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","className","map","_searchResults$find","_searchResults$find$i","_searchResults$find2","onDrop","e","onDragOver","src","find","card","toString","image_uris","art_crop","alt","name","draggable","onDragStart","_c","$RefreshReg$"],"sources":["/Users/Jakeb/repos/mtg-topster/mtg-topster-frontend/src/CardFetcher.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar';\nimport './CardFetcher.css';\n\nfunction CardFetcher() {\n    const [searchResults, setSearchResults] = useState([]);\n    const [gridItems, setGridItems] = useState(Array(9).fill(null));\n\n    const handleSearch = async (query) => {\n        try {\n            const response = await axios.get(`http://localhost:5000/search/${query}`);\n            setSearchResults(response.data);  // Assuming the backend returns an array of cards\n        } catch (error) {\n            console.error(\"Error searching for cards:\", error);\n        }\n    };\n\n    function handleDragStart(event) {\n        event.dataTransfer.setData(\"cardId\", event.target.id);\n    }\n\n    function handleDragOver(event) {\n        event.preventDefault();\n    }\n      \n    function handleDrop(event, index) {\n        event.preventDefault();\n        const cardId = event.dataTransfer.getData(\"cardId\");\n        const draggedImage = document.getElementById(cardId);\n    \n        if (draggedImage) {\n            while (event.target.firstChild) {\n                event.target.removeChild(event.target.firstChild);\n            }\n            event.target.appendChild(draggedImage);\n            \n            const newGridItems = [...gridItems];\n            newGridItems[index] = cardId; // Store the ID of the card in the grid cell's index\n            setGridItems(newGridItems);\n        }\n    }\n    \n    return (\n        <div>\n            <SearchBar onSearch={handleSearch} />\n            <div className=\"grid-container\">\n                {gridItems.map((cardId, index) => (\n                    <div key={index} className=\"grid-item\" onDrop={(e) => handleDrop(e, index)} onDragOver={handleDragOver}>\n                        {cardId && (\n                            <img \n                                className=\"cropped-image\" \n                                src={searchResults.find(card => card.id.toString() === cardId)?.image_uris?.art_crop} \n                                alt={searchResults.find(card => card.id.toString() === cardId)?.name}\n                                draggable=\"true\" \n                                onDragStart={handleDragStart} \n                                id={cardId} \n                            />\n                        )}\n                    </div>\n                ))}\n            </div>\n            {searchResults.map(card => (\n                card.image_uris && card.image_uris.art_crop ? (\n                    <div className=\"art-container\" key={card.id}>\n                        <img className=\"cropped-image\" src={card.image_uris.art_crop} alt={card.name} draggable=\"true\" onDragStart={handleDragStart} id={card.id} />\n                    </div>\n                ) : (\n                    <div className=\"art-container\" key={card.id}>\n                        <p>No image available for {card.name}.</p>\n                    </div>\n                )\n            ))}\n        </div>\n    );\n}\n\nexport default CardFetcher;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}